<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="BooleanContent.StatusSwitch.OffContent" xml:space="preserve">
    <value>禁用</value>
  </data>
  <data name="BooleanContent.StatusSwitch.OnContent" xml:space="preserve">
    <value>启用</value>
  </data>
  <data name="DetailPage.DefaultLevelComboBoxItem.Content" xml:space="preserve">
    <value>默认</value>
  </data>
  <data name="DetailPage.DescriptionButton.Content" xml:space="preserve">
    <value>查看</value>
  </data>
  <data name="DetailPage.DescriptionSettingsCard.Header" xml:space="preserve">
    <value>文档</value>
  </data>
  <data name="DetailPage.DynamicRefreshSettingsCard.Header" xml:space="preserve">
    <value>动态刷新</value>
  </data>
  <data name="DetailPage.LevelSettingsCard.Header" xml:space="preserve">
    <value>级别</value>
  </data>
  <data name="DetailPage.MandatoryLevelComboBoxItem.Content" xml:space="preserve">
    <value>强制</value>
  </data>
  <data name="DetailPage.MarkdownTextBlock_OnLinkClicked.DialogCancelButtonText" xml:space="preserve">
    <value>取消</value>
  </data>
  <data name="DetailPage.MarkdownTextBlock_OnLinkClicked.DialogCopyButtonText" xml:space="preserve">
    <value>复制</value>
  </data>
  <data name="DetailPage.MarkdownTextBlock_OnLinkClicked.DialogSearchButtonText" xml:space="preserve">
    <value>搜索</value>
  </data>
  <data name="DetailPage.MarkdownTextBlock_OnLinkClicked.DialogTitle" xml:space="preserve">
    <value>策略锚点</value>
  </data>
  <data name="DetailPage.RecommendedLevelComboBoxItem.Content" xml:space="preserve">
    <value>推荐</value>
  </data>
  <data name="DetailPage.StatusSettingsCard.Header" xml:space="preserve">
    <value>状态</value>
  </data>
  <data name="DetailPage.SupportVersionSettingsCard.Header" xml:space="preserve">
    <value>支持版本</value>
  </data>
  <data name="Language" xml:space="preserve">
    <value>zh_CN</value>
  </data>
  <data name="MainWindow.Title" xml:space="preserve">
    <value>Edge 策略管理器</value>
  </data>
  <data name="OpenFilePicker.FileFilter.AllFiles" xml:space="preserve">
    <value>所有文件</value>
  </data>
  <data name="OpenFilePicker.Title" xml:space="preserve">
    <value>打开</value>
  </data>
  <data name="PolicyContent.UnconfiguredTextBlock.Text" xml:space="preserve">
    <value>未配置</value>
  </data>
  <data name="PolicyPage.AllNavigate.AllPolicyName" xml:space="preserve">
    <value>全部策略</value>
  </data>
  <data name="PolicyPage.AllNavigationItem.Content" xml:space="preserve">
    <value>全部</value>
  </data>
  <data name="PolicyPage.AutoSuggestBox.PlaceholderText" xml:space="preserve">
    <value>搜索</value>
  </data>
  <data name="PolicyPage.ConfiguredNavigate.ConfiguredPolicyName" xml:space="preserve">
    <value>已配置策略</value>
  </data>
  <data name="PolicyPage.ConfiguredNavigationItem.Content" xml:space="preserve">
    <value>已配置</value>
  </data>
  <data name="PolicyPage.Name" xml:space="preserve">
    <value>策略</value>
  </data>
  <data name="PolicyPage.SearchPolicy.SearchResultName" xml:space="preserve">
    <value>“{0}”的搜索结果</value>
  </data>
  <data name="RegistryUtil.ShowValue.DefaultText" xml:space="preserve">
    <value>（默认）</value>
  </data>
  <data name="RegistryUtil.ShowValue.DisabledText" xml:space="preserve">
    <value>禁用</value>
  </data>
  <data name="RegistryUtil.ShowValue.EnabledText" xml:space="preserve">
    <value>启用</value>
  </data>
  <data name="RegistryUtil.ShowValue.RecommendedText" xml:space="preserve">
    <value>（推荐）</value>
  </data>
  <data name="RegistryUtil.ShowValue.UnconfiguredText" xml:space="preserve">
    <value>未配置</value>
  </data>
  <data name="RegistryUtil.ShowValue.UnsupportedText" xml:space="preserve">
    <value>不支持</value>
  </data>
  <data name="SaveFilePicker.FileFilter.AllFiles" xml:space="preserve">
    <value>所有文件</value>
  </data>
  <data name="SaveFilePicker.FileName" xml:space="preserve">
    <value>文档</value>
  </data>
  <data name="SaveFilePicker.Title" xml:space="preserve">
    <value>另存为</value>
  </data>
  <data name="SettingsPage.ExportButton_OnClick.SavePicker.PolicyConfig" xml:space="preserve">
    <value>策略配置</value>
  </data>
  <data name="SettingsPage.ExportButton_OnClick.SavePicker.Title" xml:space="preserve">
    <value>导出策略</value>
  </data>
  <data name="SettingsPage.ExportButton_OnClick.SuccessDialog.Content" xml:space="preserve">
    <value>策略配置已成功导出。</value>
  </data>
  <data name="SettingsPage.ExportButton_OnClick.SuccessDialog.PrimaryButtonText" xml:space="preserve">
    <value>确定</value>
  </data>
  <data name="SettingsPage.ExportButton_OnClick.SuccessDialog.SecondaryButtonText" xml:space="preserve">
    <value>打开文件夹</value>
  </data>
  <data name="SettingsPage.ExportButton_OnClick.SuccessDialog.Title" xml:space="preserve">
    <value>导出成功</value>
  </data>
  <data name="SettingsPage.ImpAndExpSettings.ExportButton.Content" xml:space="preserve">
    <value>导出</value>
  </data>
  <data name="SettingsPage.ImpAndExpSettings.ImportButton.Content" xml:space="preserve">
    <value>导入</value>
  </data>
  <data name="SettingsPage.ImpAndExpSettingsCard.Description" xml:space="preserve">
    <value>不建议导入不受信任的配置文件。</value>
  </data>
  <data name="SettingsPage.ImpAndExpSettingsCard.Header" xml:space="preserve">
    <value>导入和导出策略配置</value>
  </data>
  <data name="SettingsPage.ImportButton_OnClick.FailDialog.Content" xml:space="preserve">
    <value>请检查策略配置文件的格式和类型是否正确。</value>
  </data>
  <data name="SettingsPage.ImportButton_OnClick.FailDialog.PrimaryButtonText" xml:space="preserve">
    <value>确定</value>
  </data>
  <data name="SettingsPage.ImportButton_OnClick.FailDialog.Title" xml:space="preserve">
    <value>导入失败</value>
  </data>
  <data name="SettingsPage.ImportButton_OnClick.OpenPicker.PolicyConfig" xml:space="preserve">
    <value>策略配置</value>
  </data>
  <data name="SettingsPage.ImportButton_OnClick.OpenPicker.Title" xml:space="preserve">
    <value>导入策略</value>
  </data>
  <data name="SettingsPage.ImportButton_OnClick.SuccessDialog.Content" xml:space="preserve">
    <value>策略配置已成功导入。</value>
  </data>
  <data name="SettingsPage.ImportButton_OnClick.SuccessDialog.PrimaryButtonText" xml:space="preserve">
    <value>确定</value>
  </data>
  <data name="SettingsPage.ImportButton_OnClick.SuccessDialog.Title" xml:space="preserve">
    <value>导入成功</value>
  </data>
  <data name="SettingsPage.TitleTextBlock.Text" xml:space="preserve">
    <value>设置</value>
  </data>
  <data name="UnsupportedContent.TextBlock.Text" xml:space="preserve">
    <value>不可用</value>
  </data>
  <data name="WelcomePage.DownloadButton.Content" xml:space="preserve">
    <value>获取最新版</value>
  </data>
  <data name="WelcomePage.FeedbackButton.Content" xml:space="preserve">
    <value>问题反馈</value>
  </data>
  <data name="WelcomePage.GithubButtonText.Text" xml:space="preserve">
    <value>Github 仓库</value>
  </data>
  <data name="WelcomePage.Name" xml:space="preserve">
    <value>欢迎</value>
  </data>
  <data name="WelcomePage.TitleTextBlock.Text" xml:space="preserve">
    <value>Edge 策略管理器</value>
  </data>
  <data name="WelcomePage.VersionButton.Content" xml:space="preserve">
    <value>版本信息</value>
  </data>
  <data name="WelcomePage.VersionButton_OnClick.VersionInfoDialog.CloseButtonText" xml:space="preserve">
    <value>确定</value>
  </data>
  <data name="WelcomePage.VersionButton_OnClick.VersionInfoDialog.CurrentCompatibleVersionKey" xml:space="preserve">
    <value>当前兼容版本</value>
  </data>
  <data name="WelcomePage.VersionButton_OnClick.VersionInfoDialog.CurrentVersionKey" xml:space="preserve">
    <value>当前版本</value>
  </data>
  <data name="WelcomePage.VersionButton_OnClick.VersionInfoDialog.EdgeVersionKey" xml:space="preserve">
    <value>Edge 版本</value>
  </data>
  <data name="WelcomePage.VersionButton_OnClick.VersionInfoDialog.GettingValueText" xml:space="preserve">
    <value>正在获取……</value>
  </data>
  <data name="WelcomePage.VersionButton_OnClick.VersionInfoDialog.LatestCompatibleVersionKey" xml:space="preserve">
    <value>最新兼容版本</value>
  </data>
  <data name="WelcomePage.VersionButton_OnClick.VersionInfoDialog.LatestVersionKey" xml:space="preserve">
    <value>最新版本</value>
  </data>
  <data name="WelcomePage.VersionButton_OnClick.VersionInfoDialog.PolicyCompatibilityTitle" xml:space="preserve">
    <value>策略兼容性</value>
  </data>
  <data name="WelcomePage.VersionButton_OnClick.VersionInfoDialog.PolicyManagerTitle" xml:space="preserve">
    <value>策略管理器</value>
  </data>
  <data name="WelcomePage.VersionButton_OnClick.VersionInfoDialog.Title" xml:space="preserve">
    <value>版本信息</value>
  </data>
  <data name="WelcomePage.VersionButton_OnClick.VersionInfoDialog.UnknownText" xml:space="preserve">
    <value>未知</value>
  </data>
</root>